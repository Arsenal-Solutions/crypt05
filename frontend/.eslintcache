[{"/home/achen/IdeaProjects/crypt05/frontend/src/index.js":"1","/home/achen/IdeaProjects/crypt05/frontend/src/serviceWorker.js":"2","/home/achen/IdeaProjects/crypt05/frontend/src/App.jsx":"3","/home/achen/IdeaProjects/crypt05/frontend/src/components/Signup/Signup.js":"4","/home/achen/IdeaProjects/crypt05/frontend/src/components/Login/Login.jsx":"5","/home/achen/IdeaProjects/crypt05/frontend/src/components/TransferPage/TransferPage.tsx":"6","/home/achen/IdeaProjects/crypt05/frontend/src/components/CodePage/CodePage.tsx":"7","/home/achen/IdeaProjects/crypt05/frontend/src/components/ScanCodePage/ScanCodePage.tsx":"8","/home/achen/IdeaProjects/crypt05/frontend/src/components/Scanner/Scanner.tsx":"9","/home/achen/IdeaProjects/crypt05/frontend/src/components/SendPage/SendPage.tsx":"10","/home/achen/IdeaProjects/crypt05/frontend/src/components/TransactionsPage/TransactionsPage.tsx":"11","/home/achen/IdeaProjects/crypt05/frontend/src/components/HomePage/HomePage.tsx":"12"},{"size":568,"mtime":1632597771286,"results":"13","hashOfConfig":"14"},{"size":5086,"mtime":1632597771286,"results":"15","hashOfConfig":"14"},{"size":1320,"mtime":1632635471753,"results":"16","hashOfConfig":"14"},{"size":2755,"mtime":1632619699268,"results":"17","hashOfConfig":"14"},{"size":3078,"mtime":1632637342516,"results":"18","hashOfConfig":"14"},{"size":4277,"mtime":1632630979069,"results":"19","hashOfConfig":"14"},{"size":1913,"mtime":1632631378507,"results":"20","hashOfConfig":"14"},{"size":972,"mtime":1632639199258,"results":"21","hashOfConfig":"14"},{"size":1581,"mtime":1632621081418,"results":"22","hashOfConfig":"14"},{"size":2493,"mtime":1632638519824,"results":"23","hashOfConfig":"14"},{"size":7631,"mtime":1632638495348,"results":"24","hashOfConfig":"14"},{"size":2561,"mtime":1632639352779,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1izfsv0",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/achen/IdeaProjects/crypt05/frontend/src/index.js",["57","58","59"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Redirect, Route} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",["60","61"],"/home/achen/IdeaProjects/crypt05/frontend/src/serviceWorker.js",[],"/home/achen/IdeaProjects/crypt05/frontend/src/App.jsx",[],"/home/achen/IdeaProjects/crypt05/frontend/src/components/Signup/Signup.js",["62","63"],"import React, {Component, useState} from 'react';\nimport {Button, FormGroup, FormControl, Alert} from \"react-bootstrap\";\nimport styles from \"./Signup.module.css\";\nimport axios from \"axios\";\nimport {Redirect} from \"react-router-dom\";\n\n\nfunction Signup(){\n    const [email,setEmail] = useState(\"\");\n    const [password,setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [error,setError] = useState(\"\");\n    let [valid,setValid] = useState(false);\n\n    function validateForm(){\n        return email.length > 0 && password.length >= 8 && password === confirmPassword;\n    }\n\n    async function handleSubmit(event){\n        event.preventDefault();\n        try {\n            const result = await axios.post('/api/users', {\n                username: email,\n                password: password\n            });\n            const user = result.data;\n            window.localStorage.setItem('user', JSON.stringify(user));\n            setValid(true);\n        }\n        catch(err) {\n            setError(err.response.data.message);\n        }\n    }\n\n    if(valid){\n        return <Redirect to=\"/home\"/>\n    }\n    return (\n        <div className={styles.Register}>\n            <div className={styles.Logo}>\n                <img style={{width: '100%'}} src=\"/Cryp3t05.png\"/>\n            </div>\n            {\n                error ? <Alert variant=\"danger\" className={styles.Login}>{error}</Alert> : <></>\n            }\n            <form onSubmit={handleSubmit}>\n                <FormGroup controlId=\"email\" bsSize=\"large\">\n                    <h4>Email</h4>\n                    <FormControl\n                        autoFocus\n                        type=\"email\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                </FormGroup>\n                <FormGroup controlId=\"password\" bsSize=\"large\">\n                    <h4>Password</h4>\n                    <FormControl\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                </FormGroup>\n                <FormGroup controlId=\"password\" bsSize=\"large\">\n                    <h4>ConfirmPassword</h4>\n                    <FormControl\n                        value={confirmPassword}\n                        onChange={e => setConfirmPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                </FormGroup>\n\n                <Button block bsSize=\"large\" disabled={!validateForm()} type=\"submit\">\n                    Sign Up\n                </Button>\n            </form>\n        </div>\n    );\n\n}\n\nexport default Signup;","/home/achen/IdeaProjects/crypt05/frontend/src/components/Login/Login.jsx",["64","65","66","67","68"],"/home/achen/IdeaProjects/crypt05/frontend/src/components/TransferPage/TransferPage.tsx",["69","70","71","72"],"// @ts-ignore\nimport styles from './TransferPage.module.css';\nimport {useState} from \"react\";\nimport {Redirect, Link} from \"react-router-dom\";\n\ntype Key = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 0 | '.' | '<';\n\nfunction TransferPage(){\n\n    const [currentValue, setCurrentValue] = useState(0.00);\n    const [hasDecimal, setHasDecimal] = useState(false);\n    const [decimalIndex, setDecimalIndex] = useState(0);\n\n    const [send, setSend] = useState(false);\n\n    function handleKey(key: Key) {\n        if(typeof(key) === 'number') {\n            let integer = Math.floor(currentValue);\n            let decimal = (currentValue - integer) * 100;\n\n            if(hasDecimal) {\n                if(decimalIndex < 2) {\n                    if(decimalIndex == 0) {\n                        decimal = key * 10;\n                        setDecimalIndex(1);\n                    }\n                    else {\n                        decimal += key\n                        setDecimalIndex(2)\n                    }\n                }\n            }\n            else {\n                integer = parseInt(integer.toString() + key);\n            }\n            setCurrentValue(integer + (decimal / 100));\n        }\n        else if(key === '.') {\n            setHasDecimal(true);\n        }\n        else if(key === '<') {\n            let integer = Math.floor(currentValue);\n            let decimal = (currentValue - integer) * 100;\n\n            if(hasDecimal) {\n                if(decimalIndex === 0) {\n                    setHasDecimal(false);\n                }\n                else {\n                    if(decimalIndex == 2) {\n                        decimal = Math.floor(decimal / 10) * 10;\n                    }\n                    else if(decimalIndex == 1) {\n                        decimal = 0;\n                    }\n                    setDecimalIndex(decimalIndex - 1);\n                }\n            }\n            else {\n                integer = Math.floor(integer / 10);\n            }\n            setCurrentValue(integer + (decimal / 100));\n        }\n    }\n\n    if(send) {\n        return <Redirect to={`/scanAndSend/${currentValue}`}/>\n    }\n\n    return <div className={styles.container}>\n        <div className={styles.currentValue}>\n            <img className={styles.miamicoin} src=\"/Miamicoin.png\"/>\n            <div className={styles.currentValueText}>\n                {\n                    currentValue.toFixed(hasDecimal ? 2 : 0)\n                }\n            </div>\n        </div>\n\n        <div className={styles.keypad}>\n            <div className={styles.keyRow}>\n                {\n                    [1,2,3].map(v => <div className={styles.key} onClick={() => {handleKey(v as Key)}}>{v}</div>)\n                }\n            </div>\n            <div className={styles.keyRow}>\n                {\n                    [4,5,6].map(v => <div className={styles.key} onClick={() => {handleKey(v as Key)}}>{v}</div>)\n                }\n            </div>\n            <div className={styles.keyRow}>\n                {\n                    [7,8,9].map(v => <div className={styles.key} onClick={() => {handleKey(v as Key)}}>{v}</div>)\n                }\n            </div>\n            <div className={styles.keyRow}>\n                {\n                    ['.',0,'<'].map(v => <div className={styles.key} onClick={() => {handleKey(v as Key)}}>{v}</div>)\n                }\n            </div>\n        </div>\n\n        <div className={styles.bottomBar}>\n            <div onClick={() => {\n                setSend(true);\n            }}>\n                Send\n            </div>\n            <div>\n                Request\n            </div>\n        </div>\n\n        <div className={styles.navBar}>\n            <Link to=\"/transactions\" className={[styles.navBarIcon, 'material-icons'].join(' ')}>\n                receipt_long\n            </Link>\n            <Link to=\"/transfer\" className={[styles.navBarIcon, 'material-icons'].join(' ')}>\n                sync_alt\n            </Link>\n            <Link to=\"/code\" className={[styles.navBarIcon, 'material-icons'].join(' ')}>\n                qr_code_2\n            </Link>\n            <Link to=\"/home\" className={[styles.navBarIcon, 'material-icons'].join(' ')}>\n                home\n            </Link>\n        </div>\n    </div>\n}\n\nexport default TransferPage;",["73","74"],"/home/achen/IdeaProjects/crypt05/frontend/src/components/CodePage/CodePage.tsx",["75"],"import styles from \"./CodePage.module.css\";\nimport {useState, useEffect} from \"react\";\nimport {QRCodeWriter, BarcodeFormat} from \"@zxing/library\";\nimport Jimp from \"jimp\";\nimport {Link} from \"react-router-dom\";\n\nfunction CodePage() {\n\n    const [imageUrl, setImageUrl] = useState('');\n\n    useEffect(() => {\n        if(!window.localStorage.getItem('user')) {\n            return;\n        }\n        const address = JSON.parse(window.localStorage.getItem('user') as string).address;\n        if(!address) {\n            return;\n        }\n        const code = new QRCodeWriter().encode(address, BarcodeFormat.QR_CODE, 256, 256, new Map());\n\n        const image = new Jimp(256, 256);\n\n        for (let i = 0; i < code.getWidth(); i++) {\n            for (let j = 0; j < code.getHeight(); j++) {\n                image.setPixelColor(code.get(i, j) ? 0 : 0xffffffff, i, j);\n            }\n        }\n\n        image.getBufferAsync('image/png').then(buff => {\n            const blob = new Blob([buff], {type: 'image/png'});\n            const url = URL.createObjectURL(blob);\n            setImageUrl(url);\n        })\n    }, [])\n\n\n\n    return <div className={styles.container}>\n        <img src={imageUrl} className={styles.code}/>\n\n        <div className={styles.whiteSpace}></div>\n\n        <div className={styles.navBar}>\n            <Link to=\"/transactions\" className={[styles.navBarIcon, 'material-icons'].join(' ')}>\n                receipt_long\n            </Link>\n            <Link to=\"/transfer\" className={[styles.navBarIcon, 'material-icons'].join(' ')}>\n                sync_alt\n            </Link>\n            <Link to=\"/code\" className={[styles.navBarIcon, 'material-icons'].join(' ')}>\n                qr_code_2\n            </Link>\n            <Link to=\"/home\" className={[styles.navBarIcon, 'material-icons'].join(' ')}>\n                home\n            </Link>\n        </div>\n    </div>\n}\n\nexport default CodePage;","/home/achen/IdeaProjects/crypt05/frontend/src/components/ScanCodePage/ScanCodePage.tsx",["76"],"/home/achen/IdeaProjects/crypt05/frontend/src/components/Scanner/Scanner.tsx",["77"],"import React from 'react';\nimport {BarcodeFormat, BrowserMultiFormatReader, DecodeHintType} from '@zxing/library';\nimport styles from './Scanner.module.css';\n\nexport type ScannerState = {\n    devices: MediaDeviceInfo[]\n}\n\nexport type ScannerProps = {\n    onScan: (value: string) => void,\n    onNoCameraFound?: () => void\n}\n\nclass Scanner extends React.Component<ScannerProps, ScannerState> {\n    state: ScannerState = {\n        devices: []\n    }\n\n    codeReader: BrowserMultiFormatReader;\n\n    constructor(props: any) {\n        super(props);\n        const hints = new Map<DecodeHintType, any>();\n        hints.set(2, [11, 4]);\n        this.codeReader = new BrowserMultiFormatReader();\n    }\n\n    async componentDidMount() {\n        const devices = (await this.codeReader.listVideoInputDevices()).filter(device => device.kind === 'videoinput');\n        this.setState({\n            devices\n        });\n        if (!devices.length) {\n            this.props.onNoCameraFound?.();\n            return;\n        }\n\n        this.codeReader.decodeFromConstraints({\n            video: {\n                facingMode: \"environment\",\n            }\n        }, 'video', (result, error) => {\n            if (result) {\n                this.props.onScan(result.getText());\n            }\n        });\n    }\n\n    render(): React.ReactNode {\n        return this.state.devices.length ?\n            <video id='video' style={{height: '100%', width: '100%', objectFit: 'cover'}}/> :\n            <div className={styles.error}>\n                No camera found\n            </div>;\n    }\n}\n\nexport default Scanner;","/home/achen/IdeaProjects/crypt05/frontend/src/components/SendPage/SendPage.tsx",["78","79","80","81"],"/home/achen/IdeaProjects/crypt05/frontend/src/components/TransactionsPage/TransactionsPage.tsx",["82","83","84","85"],"/home/achen/IdeaProjects/crypt05/frontend/src/components/HomePage/HomePage.tsx",["86","87","88"],{"ruleId":"89","severity":1,"message":"90","line":6,"column":9,"nodeType":"91","messageId":"92","endLine":6,"endColumn":22},{"ruleId":"89","severity":1,"message":"93","line":6,"column":24,"nodeType":"91","messageId":"92","endLine":6,"endColumn":32},{"ruleId":"89","severity":1,"message":"94","line":6,"column":34,"nodeType":"91","messageId":"92","endLine":6,"endColumn":39},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"89","severity":1,"message":"99","line":1,"column":16,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"100","severity":1,"message":"101","line":41,"column":17,"nodeType":"102","endLine":41,"endColumn":67},{"ruleId":"89","severity":1,"message":"94","line":4,"column":25,"nodeType":"91","messageId":"92","endLine":4,"endColumn":30},{"ruleId":"89","severity":1,"message":"103","line":6,"column":8,"nodeType":"91","messageId":"92","endLine":6,"endColumn":16},{"ruleId":"89","severity":1,"message":"104","line":7,"column":8,"nodeType":"91","messageId":"92","endLine":7,"endColumn":19},{"ruleId":"89","severity":1,"message":"105","line":36,"column":11,"nodeType":"91","messageId":"92","endLine":36,"endColumn":25},{"ruleId":"100","severity":1,"message":"101","line":46,"column":21,"nodeType":"102","endLine":46,"endColumn":71},{"ruleId":"106","severity":1,"message":"107","line":23,"column":37,"nodeType":"108","messageId":"109","endLine":23,"endColumn":39},{"ruleId":"106","severity":1,"message":"107","line":50,"column":37,"nodeType":"108","messageId":"109","endLine":50,"endColumn":39},{"ruleId":"106","severity":1,"message":"107","line":53,"column":42,"nodeType":"108","messageId":"109","endLine":53,"endColumn":44},{"ruleId":"100","severity":1,"message":"101","line":72,"column":13,"nodeType":"102","endLine":72,"endColumn":69},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"100","severity":1,"message":"101","line":39,"column":9,"nodeType":"102","endLine":39,"endColumn":54},{"ruleId":"110","severity":1,"message":"111","line":2,"column":19,"nodeType":"91","messageId":"92","endLine":2,"endColumn":28},{"ruleId":"110","severity":1,"message":"112","line":2,"column":9,"nodeType":"91","messageId":"92","endLine":2,"endColumn":22},{"ruleId":"113","severity":1,"message":"114","line":30,"column":8,"nodeType":"115","endLine":30,"endColumn":10,"suggestions":"116"},{"ruleId":"100","severity":1,"message":"101","line":37,"column":9,"nodeType":"102","endLine":37,"endColumn":60},{"ruleId":"100","severity":1,"message":"101","line":43,"column":29,"nodeType":"102","endLine":43,"endColumn":85},{"ruleId":"100","severity":1,"message":"101","line":69,"column":9,"nodeType":"102","endLine":69,"endColumn":57},{"ruleId":"110","severity":1,"message":"93","line":4,"column":9,"nodeType":"91","messageId":"92","endLine":4,"endColumn":17},{"ruleId":"100","severity":1,"message":"101","line":81,"column":9,"nodeType":"102","endLine":81,"endColumn":60},{"ruleId":"100","severity":1,"message":"101","line":103,"column":25,"nodeType":"102","endLine":103,"endColumn":81},{"ruleId":"100","severity":1,"message":"101","line":133,"column":25,"nodeType":"102","endLine":133,"endColumn":81},{"ruleId":"100","severity":1,"message":"101","line":26,"column":9,"nodeType":"102","endLine":26,"endColumn":59},{"ruleId":"100","severity":1,"message":"101","line":27,"column":9,"nodeType":"102","endLine":27,"endColumn":56},{"ruleId":"100","severity":1,"message":"101","line":30,"column":13,"nodeType":"102","endLine":30,"endColumn":69},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Route' is defined but never used.","no-native-reassign",["117"],"no-negated-in-lhs",["118"],"'Component' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ReactDOM' is defined but never used.","'GoogleLogin' is defined but never used.","'responseGoogle' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","'BarcodeFormat' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.match.params.address' and 'props.match.params.amount'. Either include them or remove the dependency array.","ArrayExpression",["119"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},"Update the dependencies array to be: [props.match.params.address, props.match.params.amount]",{"range":"122","text":"123"},[960,962],"[props.match.params.address, props.match.params.amount]"]