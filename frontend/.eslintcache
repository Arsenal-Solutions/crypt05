[{"C:\\Users\\achen\\Desktop\\Cryto5\\crypt05\\frontend\\src\\index.js":"1","C:\\Users\\achen\\Desktop\\Cryto5\\crypt05\\frontend\\src\\serviceWorker.js":"2","C:\\Users\\achen\\Desktop\\Cryto5\\crypt05\\frontend\\src\\App.jsx":"3","C:\\Users\\achen\\Desktop\\Cryto5\\crypt05\\frontend\\src\\components\\Login\\Login.jsx":"4","C:\\Users\\achen\\Desktop\\Cryto5\\crypt05\\frontend\\src\\components\\Signup\\Signup.js":"5","C:\\Users\\achen\\Desktop\\Cryto5\\crypt05\\frontend\\src\\components\\Home\\Home.js":"6"},{"size":568,"mtime":1632544589175,"results":"7","hashOfConfig":"8"},{"size":5086,"mtime":1632544589231,"results":"9","hashOfConfig":"8"},{"size":511,"mtime":1632604985622,"results":"10","hashOfConfig":"8"},{"size":3598,"mtime":1632601291037,"results":"11","hashOfConfig":"8"},{"size":2747,"mtime":1632600629285,"results":"12","hashOfConfig":"8"},{"size":1344,"mtime":1632612614824,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"1jpdlt7",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"17"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"17"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"17"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\achen\\Desktop\\Cryto5\\crypt05\\frontend\\src\\index.js",["31","32","33"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Redirect, Route} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",["34","35"],"C:\\Users\\achen\\Desktop\\Cryto5\\crypt05\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\achen\\Desktop\\Cryto5\\crypt05\\frontend\\src\\App.jsx",["36"],"import React from 'react';\nimport {BrowserRouter, Redirect, Route} from \"react-router-dom\";\nimport Login from \"./components/Login/Login\";\nimport Signup from './components/Signup/Signup';\nimport Home from './components/Home/Home'\n\n\n\nexport default class App extends React.Component {\n  render() {\n    return <BrowserRouter>\n      <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/signup\" component={Signup}/>\n      <Route exact path=\"/Home\" component={Home}/>\n    </BrowserRouter>\n\n  }\n}\n","C:\\Users\\achen\\Desktop\\Cryto5\\crypt05\\frontend\\src\\components\\Login\\Login.jsx",["37","38","39","40"],"import React, {useState} from 'react';\nimport { Button, FormGroup, FormControl, Alert} from \"react-bootstrap\";\nimport styles from './Login.module.css';\nimport {Link, Redirect, Route} from \"react-router-dom\";\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\nimport GoogleLogin from 'react-google-login';\n<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\n\nfunction Login(){\n    const [email,setEmail] = useState(\"\");\n    const [password,setPassword] = useState(\"\");\n    const [error,setError] = useState(\"\");\n    let [valid, setValid] = useState(false);\n\n\n    function validateForm(){\n        return email.length > 0 && password.length >= 8;\n    }\n\n    async function handleSubmit(event){\n        event.preventDefault();\n        try {\n            const result = await axios.post('/api/clients/login', {\n                email: email,\n                password: password\n            });\n            const user = result.data;\n            setValid(true);\n        }\n        catch(err) {\n            setError(err.response.data.message);\n        }\n    }\n\n    const responseGoogle = (response) => {\n        console.log(response);\n    }\n\n    if(valid){\n        return <Redirect to=\"/Home\"/>\n    }\n        return (\n            <div>\n                <div className={styles.Logo}>\n                    <img src=\"/CrisisCheck_Logo.svg\"/>\n                </div>\n                {\n                    error ? <Alert variant=\"danger\" className={styles.Login}>{error}</Alert> : <></>\n                }\n                <div className={styles.Login}>\n                    <form onSubmit={handleSubmit}>\n                        <FormGroup controlId=\"email\" bsSize=\"large\">\n                            <h4>Email</h4>\n                            <FormControl\n                                autoFocus\n                                type=\"email\"\n                                value={email}\n                                onChange={e => setEmail(e.target.value)}\n                            />\n                        </FormGroup>\n                        <FormGroup controlId=\"password\" bsSize=\"large\">\n                            <h4>Password</h4>\n                            <FormControl\n                                value={password}\n                                onChange={e => setPassword(e.target.value)}\n                                type=\"password\"\n                            />\n                        </FormGroup>\n\n                            <Button block bsSize=\"large\" disabled={!validateForm()} type=\"submit\">\n                                Login\n                            </Button>\n\n                            <div className={styles.signUp}>\n                            <Link to =\"/signUp\">\n                                <Button block bsSize=\"large\" type=\"submit\">\n                                    Sign Up\n                                </Button>\n                            </Link>\n                        </div>\n\n                        <div className = {styles.GoogleLogin}>\n                            <GoogleLogin\n                                clientId=\"97176934286-jivcjar88gvir43f5cetgmetpr3hncqj.apps.googleusercontent.com\"\n                                buttonText=\"Sign in with Google\"\n                                onSuccess={responseGoogle}\n                                onFailure={responseGoogle}\n                                cookiePolicy={'single_host_origin'}\n                            />\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n        );\n\n}\n\nexport default Login;","C:\\Users\\achen\\Desktop\\Cryto5\\crypt05\\frontend\\src\\components\\Signup\\Signup.js",["41","42","43"],"import React, {Component, useState} from 'react';\r\nimport {Button, FormGroup, FormControl, Alert} from \"react-bootstrap\";\r\nimport styles from \"./Signup.module.css\";\r\nimport axios from \"axios\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nfunction Signup(){\r\n    const [email,setEmail] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [error,setError] = useState(\"\");\r\n    let [valid,setValid] = useState(false);\r\n\r\n    function validateForm(){\r\n        return email.length > 0 && password.length >= 8 && password === confirmPassword;\r\n    }\r\n\r\n    async function handleSubmit(event){\r\n        event.preventDefault();\r\n        try {\r\n            const result = await axios.post('/api/clients', {\r\n                email: email,\r\n                password: password\r\n            });\r\n            const user = result.data;\r\n            setValid(true);\r\n        }\r\n        catch(err) {\r\n            setError(err.response.data.message);\r\n        }\r\n    }\r\n\r\n    if(valid){\r\n        return <Redirect to=\"/Home\"/>\r\n    }\r\n    return (\r\n        <div className={styles.Register}>\r\n            <div className={styles.Logo}>\r\n                <img src=\"/CrisisCheck_Logo.svg\"/>\r\n            </div>\r\n            {\r\n                error ? <Alert variant=\"danger\" className={styles.Login}>{error}</Alert> : <></>\r\n            }\r\n            <form onSubmit={handleSubmit}>\r\n                <FormGroup controlId=\"email\" bsSize=\"large\">\r\n                    <h4>Email</h4>\r\n                    <FormControl\r\n                        autoFocus\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"password\" bsSize=\"large\">\r\n                    <h4>Password</h4>\r\n                    <FormControl\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                        type=\"password\"\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"password\" bsSize=\"large\">\r\n                    <h4>ConfirmPassword</h4>\r\n                    <FormControl\r\n                        value={confirmPassword}\r\n                        onChange={e => setConfirmPassword(e.target.value)}\r\n                        type=\"password\"\r\n                    />\r\n                </FormGroup>\r\n\r\n                <Button block bsSize=\"large\" disabled={!validateForm()} type=\"submit\">\r\n                    Sign Up\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Signup;","C:\\Users\\achen\\Desktop\\Cryto5\\crypt05\\frontend\\src\\components\\Home\\Home.js",["44"],{"ruleId":"45","severity":1,"message":"46","line":6,"column":9,"nodeType":"47","messageId":"48","endLine":6,"endColumn":22},{"ruleId":"45","severity":1,"message":"49","line":6,"column":24,"nodeType":"47","messageId":"48","endLine":6,"endColumn":32},{"ruleId":"45","severity":1,"message":"50","line":6,"column":34,"nodeType":"47","messageId":"48","endLine":6,"endColumn":39},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"45","severity":1,"message":"49","line":2,"column":24,"nodeType":"47","messageId":"48","endLine":2,"endColumn":32},{"ruleId":"45","severity":1,"message":"50","line":4,"column":25,"nodeType":"47","messageId":"48","endLine":4,"endColumn":30},{"ruleId":"45","severity":1,"message":"55","line":6,"column":8,"nodeType":"47","messageId":"48","endLine":6,"endColumn":16},{"ruleId":"45","severity":1,"message":"56","line":28,"column":19,"nodeType":"47","messageId":"48","endLine":28,"endColumn":23},{"ruleId":"57","severity":1,"message":"58","line":46,"column":21,"nodeType":"59","endLine":46,"endColumn":55},{"ruleId":"45","severity":1,"message":"60","line":1,"column":16,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},{"ruleId":"45","severity":1,"message":"56","line":26,"column":19,"nodeType":"47","messageId":"48","endLine":26,"endColumn":23},{"ruleId":"57","severity":1,"message":"58","line":40,"column":17,"nodeType":"59","endLine":40,"endColumn":51},{"ruleId":"57","severity":1,"message":"58","line":15,"column":17,"nodeType":"59","endLine":15,"endColumn":68},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Route' is defined but never used.","no-native-reassign",["61"],"no-negated-in-lhs",["62"],"'ReactDOM' is defined but never used.","'user' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]